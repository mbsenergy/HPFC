% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_outlier_hourly.R
\name{filter_outlier_ddhh}
\alias{filter_outlier_ddhh}
\title{Filter Hourly Outliers in Power Data}
\usage{
filter_outlier_ddhh(DT)
}
\arguments{
\item{DT}{A \code{data.table} containing the following columns:
\itemize{
\item \code{date}: Date of the observation.
\item \code{hour}: Hour of the observation.
\item \code{value}: The power value.
\item \code{value_day}: The daily average value.
\item \code{break_group_p}: A grouping variable for detected break periods.
}}
}
\value{
A \code{data.table} with the following columns:
\itemize{
\item \code{date}: The original date.
\item \code{hour}: The original hour.
\item \code{ddhh}: A combined date-hour identifier.
\item \code{value}: The cleaned value.
\item \code{break_group_p}: The original break period.
}
}
\description{
This function detects and filters outliers in hourly power data by computing
deviations from the daily mean and checking against a threshold of three standard deviations.
}
\details{
The function performs the following steps:
\itemize{
\item Computes deviations from the daily average.
\item Adjusts for weekend effects.
\item Identifies outliers based on three standard deviations from the mean deviation.
\item Removes outliers exceeding a daily threshold.
}
}
\examples{
# Example usage with a sample data.table `DT`
DT <- data.table(date = as.Date('2020-01-01') + rep(0:1, each = 24),
                 hour = rep(0:23, 2),
                 value = rnorm(48, 100, 10),
                 value_day = rep(rnorm(2, 100, 5), each = 24),
                 break_group_p = sample(1:2, 48, replace = TRUE))
result <- filter_outlier_ddhh(DT)

}
