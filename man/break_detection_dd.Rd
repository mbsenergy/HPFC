% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/break_detection.R
\name{break_detection_dd}
\alias{break_detection_dd}
\title{Detect Breakpoints in Time Series Data}
\usage{
break_detection_dd(DT)
}
\arguments{
\item{DT}{A \code{data.table} containing at least two columns:
\itemize{
\item \code{date}: Date of the observation.
\item \code{value}: The corresponding value for each date.
}}
}
\value{
A \code{data.table} with three columns:
\itemize{
\item \code{date}: The original date.
\item \code{value}: The original value, with missing values filled.
\item \code{break_group_p}: The period group assigned to each observation based on detected breaks.
}
}
\description{
This function identifies potential breakpoints in a time series of daily price data.
It performs a check for missing values, handles them by applying 'locf' and 'nocb' methods,
and then applies the 'changepoint' package's binary segmentation method to detect breaks.
The function uses a loop to test for a sufficient number of breakpoints and returns a
modified data.table with a break group assigned to each row based on the detected breaks.
}
\details{
The function performs the following steps:
\itemize{
\item Checks for missing values in the \code{date} and \code{value} columns.
\item Fills missing \code{value} entries using last observation carried forward ('locf') and
next observation carried backward ('nocb').
\item Converts the \code{value} column into a time series object and applies a changepoint detection
method to find breaks in the series.
\item Iteratively reduces the number of breaks until a break is detected with a period of
at least 3 months within the last 5 years.
\item Assigns a break group to each observation based on the detected breaks.
}
}
\examples{
# Example usage with a sample data.table `DT`
DT <- data.table(date = seq.Date(from = as.Date("2020-01-01"), by = "day", length.out = 100),
                 value = rnorm(100))
result <- break_detection_dd(DT)

}
